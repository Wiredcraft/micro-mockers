version: '2.2'
services:
  kong:
    image: 'kong:0.12-alpine'
    container_name: fixture_kong
    restart: on-failure
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8443:8443'
      - '8444:8444'
    depends_on:
      postgres:
        condition: service_healthy
      kong_migration:
        condition: service_started
    links:
      - 'postgres:postgres'
      - 'fixture_lorem:fixture_lorem'
    env_file:
      - default.env
    networks:
      - fixture
  kong_migration:
    image: 'kong:0.12-alpine'
    container_name: fixture_kong_migration
    command: kong migrations up
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - 'postgres:postgres'
    env_file:
      - default.env
    networks:
      - fixture
  postgres:
    image: 'postgres:9.4'
    container_name: fixture_postgres
    ports:
      - '5432'
    env_file:
      - default.env
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '--username=postgres'
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fixture
  fixture_lorem:
    build: ./dockers/mocks
    container_name: fixture_lorem
    volumes:
      - './lorem:/my_project'
    working_dir: /my_project
    command: drakov --config drakov.js
    ports:
      - '3000'
    networks:
      - fixture
networks:
  fixture: null
